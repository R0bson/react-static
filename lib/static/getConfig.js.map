{"version":3,"sources":["../../src/static/getConfig.js"],"names":["REGEX_TO_CUT_TO_ROOT","REGEX_TO_REMOVE_TRAILING_SLASH","REGEX_TO_REMOVE_LEADING_SLASH","DEFAULT_NAME_FOR_STATIC_CONFIG_FILE","DEFAULT_PATH_FOR_STATIC_CONFIG","nodePath","resolve","join","process","cwd","DEFAULT_ROUTES","path","DEFAULT_ENTRY","cutPathToRoot","string","replace","trimLeadingAndTrailingSlashes","buildConfigation","config","paths","root","src","dist","devDist","public","pages","nodeModules","resolvePath","relativePath","distPath","env","REACT_STATIC_ENV","ROOT","LOCAL_NODE_MODULES","SRC","PAGES","DIST","PUBLIC","NODE_MODULES","EXCLUDE_MODULES","excludeResolvedModules","PACKAGE","HTML_TEMPLATE","STATIC_DATA","finalConfig","entry","getSiteData","renderToHtml","render","Comp","prefetchRate","disableRouteInfoWarning","disableRoutePrefixing","outputFileRate","extensions","getRoutes","siteRoot","stagingSiteRoot","basePath","stagingBasePath","devBasePath","extractCssChunks","inlineCss","generated","REACT_STATIC_PREFETCH_RATE","REACT_STATIC_DISABLE_ROUTE_INFO_WARNING","REACT_STATIC_DISABLE_ROUTE_PREFIXING","buildConfigFromPath","filename","configPath","require","cache","default","err","console","error","fromFile","subscribe","chokidar","watch","on","customConfig","cb","builtConfig","getConfig"],"mappings":"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","file":"getConfig.js","sourcesContent":["/* eslint-disable import/no-dynamic-require */\n\nimport React from 'react'\nimport nodePath from 'path'\nimport chokidar from 'chokidar'\n\nimport getDirname from '../utils/getDirname'\n\nconst REGEX_TO_CUT_TO_ROOT = /(\\..+?)\\/.*/g\nconst REGEX_TO_REMOVE_TRAILING_SLASH = /^\\/{0,}/g\nconst REGEX_TO_REMOVE_LEADING_SLASH = /\\/{0,}$/g\n\nconst DEFAULT_NAME_FOR_STATIC_CONFIG_FILE = 'static.config.js'\n// the default static.config.js location\nconst DEFAULT_PATH_FOR_STATIC_CONFIG = nodePath.resolve(\n  nodePath.join(process.cwd(), DEFAULT_NAME_FOR_STATIC_CONFIG_FILE)\n)\nconst DEFAULT_ROUTES = [{ path: '/' }]\nconst DEFAULT_ENTRY = 'index.js'\n\nexport const cutPathToRoot = (string = '') => string.replace(REGEX_TO_CUT_TO_ROOT, '$1')\n\nexport const trimLeadingAndTrailingSlashes = (string = '') =>\n  string.replace(REGEX_TO_REMOVE_TRAILING_SLASH, '').replace(REGEX_TO_REMOVE_LEADING_SLASH, '')\n\nexport const buildConfigation = (config = {}) => {\n  // path defaults\n  config.paths = {\n    root: nodePath.resolve(process.cwd()),\n    src: 'src',\n    dist: 'dist',\n    devDist: 'tmp/dev-server',\n    public: 'public',\n    pages: 'src/pages', // TODO: document\n    nodeModules: 'node_modules',\n    ...(config.paths || {}),\n  }\n\n  // Use the root to resolve all other relative paths\n  const resolvePath = relativePath => nodePath.resolve(config.paths.root, relativePath)\n\n  // Resolve all paths\n  const distPath =\n    process.env.REACT_STATIC_ENV === 'development'\n      ? resolvePath(config.paths.devDist || config.paths.dist)\n      : resolvePath(config.paths.dist)\n\n  const paths = {\n    ROOT: config.paths.root,\n    LOCAL_NODE_MODULES: nodePath.resolve(getDirname(), '../../node_modules'),\n    SRC: resolvePath(config.paths.src),\n    PAGES: resolvePath(config.paths.pages),\n    DIST: distPath,\n    PUBLIC: resolvePath(config.paths.public),\n    NODE_MODULES: resolvePath(config.paths.nodeModules),\n    EXCLUDE_MODULES: config.paths.excludeResolvedModules || resolvePath(config.paths.nodeModules),\n    PACKAGE: resolvePath('package.json'),\n    HTML_TEMPLATE: nodePath.join(distPath, 'index.html'),\n    STATIC_DATA: nodePath.join(distPath, 'staticData'),\n  }\n\n  // Defaults\n  const finalConfig = {\n    // Defaults\n    entry: nodePath.join(paths.SRC, DEFAULT_ENTRY),\n    getSiteData: () => ({}),\n    renderToHtml: (render, Comp) => render(<Comp />),\n    prefetchRate: 3,\n    disableRouteInfoWarning: false,\n    disableRoutePrefixing: false,\n    outputFileRate: 10,\n    extensions: ['.js', '.jsx'], // TODO: document\n    getRoutes: async () => DEFAULT_ROUTES,\n    // Config Overrides\n    ...config,\n    // Materialized Overrides\n    paths,\n    siteRoot: cutPathToRoot(config.siteRoot, '$1'),\n    stagingSiteRoot: cutPathToRoot(config.stagingSiteRoot, '$1'),\n    basePath: trimLeadingAndTrailingSlashes(config.basePath),\n    stagingBasePath: trimLeadingAndTrailingSlashes(config.stagingBasePath),\n    devBasePath: trimLeadingAndTrailingSlashes(config.devBasePath),\n    extractCssChunks: config.extractCssChunks || false,\n    inlineCss: config.inlineCss || false,\n    generated: true,\n  }\n\n  // Set env variables to be used client side\n  process.env.REACT_STATIC_PREFETCH_RATE = finalConfig.prefetchRate\n  process.env.REACT_STATIC_DISABLE_ROUTE_INFO_WARNING = finalConfig.disableRouteInfoWarning\n  process.env.REACT_STATIC_DISABLE_ROUTE_PREFIXING = finalConfig.disableRoutePrefixing\n\n  return finalConfig\n}\n\nconst buildConfigFromPath = configPath => {\n  const filename = nodePath.resolve(configPath)\n  delete require.cache[filename]\n  try {\n    const config = require(filename).default\n    return buildConfigation(config)\n  } catch (err) {\n    console.error(err)\n    return {}\n  }\n}\n\nconst fromFile = async (configPath = DEFAULT_PATH_FOR_STATIC_CONFIG, subscribe) => {\n  const config = buildConfigFromPath(configPath)\n\n  if (subscribe) {\n    chokidar.watch(configPath).on('all', () => {\n      subscribe(buildConfigFromPath(configPath))\n    })\n  }\n\n  return config\n}\n\n// Retrieves the static.config.js from the current project directory\nexport default async function getConfig (customConfig, cb) {\n  if (typeof customConfig === 'object') {\n    // return a custom config obj\n    const builtConfig = buildConfigation(customConfig)\n    if (cb) {\n      cb(builtConfig)\n    }\n    return builtConfig\n  }\n\n  // return a custom config file location\n  // defaults to constant paath for static config\n  return fromFile(customConfig, cb)\n}\n"]}