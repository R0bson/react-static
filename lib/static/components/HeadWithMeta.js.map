{"version":3,"sources":["../../../src/static/components/HeadWithMeta.js"],"names":["REGEX_FOR_STYLE_TAG","InlineStyle","clientCss","__html","toString","replace","makeHeadWithMeta","head","route","clientScripts","config","clientStyleSheets","children","rest","renderLinkCSS","redirect","inlineCss","useHelmetTitle","title","props","childrenArray","React","cloneElement","key","Children","toArray","filter","child","type","base","meta","map","script","process","env","REACT_STATIC_PUBLICPATH","reduce","memo","styleSheet","link","noscript","style"],"mappings":";;;;;;;AAAA;;;;;;;;;;AAEA,IAAMA,sBAAsB,qBAA5B;;AAEO,IAAMC,oCAAc,SAAdA,WAAc;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SACzB;AACE,SAAI,WADN;AAEE,UAAK,UAFP;AAGE,6BAAyB;AACvBC,cAAQD,UAAUE,QAAV,GAAqBC,OAArB,CAA6BL,mBAA7B,EAAkD,EAAlD;AADe;AAH3B,IADyB;AAAA,CAApB;;AAUA,IAAMM,mBAAmB,SAAnBA,gBAAmB;AAAA,MAC9BC,IAD8B,SAC9BA,IAD8B;AAAA,MAE9BC,KAF8B,SAE9BA,KAF8B;AAAA,MAG9BC,aAH8B,SAG9BA,aAH8B;AAAA,MAI9BC,MAJ8B,SAI9BA,MAJ8B;AAAA,MAK9BC,iBAL8B,SAK9BA,iBAL8B;AAAA,MAM9BT,SAN8B,SAM9BA,SAN8B;AAAA,SAO1B,iBAA2B;AAAA,QAAxBU,QAAwB,SAAxBA,QAAwB;AAAA,QAAXC,IAAW;;AAC/B,QAAMC,gBAAgB,CAACN,MAAMO,QAAP,IAAmB,CAACL,OAAOM,SAAjD;AACA,QAAMC,iBAAiBV,KAAKW,KAAL,IAAcX,KAAKW,KAAL,CAAW,CAAX,CAAd,IAA+BX,KAAKW,KAAL,CAAW,CAAX,EAAcC,KAAd,CAAoBP,QAApB,KAAiC,EAAvF;AACA,QAAIQ,gBAAgBR,QAApB;AACA,QAAIK,cAAJ,EAAoB;AAClBV,WAAKW,KAAL,CAAW,CAAX,IAAgBG,gBAAMC,YAAN,CAAmBf,KAAKW,KAAL,CAAW,CAAX,CAAnB,EAAkC,EAAEK,KAAK,OAAP,EAAlC,CAAhB;AACAH,sBAAgBC,gBAAMG,QAAN,CAAeC,OAAf,CAAuBb,QAAvB,EAAiCc,MAAjC,CAAwC,iBAAS;AAC/D,YAAIC,MAAMC,IAAN,KAAe,OAAnB,EAA4B;AAC1B;AACA;AACA,iBAAO,KAAP;AACD;AACD,eAAO,IAAP;AACD,OAPe,CAAhB;AAQD;;AAED,WACE;AAAA;AAAUf,UAAV;AACGN,WAAKsB,IADR;AAEGZ,wBAAkBV,KAAKW,KAF1B;AAGGX,WAAKuB,IAHR;AAIG,OAACtB,MAAMO,QAAP,IACCN,cAAcsB,GAAd,CAAkB;AAAA,eAChB;AACE,iCAAqBC,MADvB;AAEE,eAAI,SAFN;AAGE,cAAG,QAHL;AAIE,qBAASC,QAAQC,GAAR,CAAYC,uBAArB,GAA+CH;AAJjD,UADgB;AAAA,OAAlB,CALJ;AAaGlB,uBACCH,kBAAkByB,MAAlB,CACE,UAACC,IAAD,EAAOC,UAAP;AAAA,4CACKD,IADL,IAEE;AACE,4CAAgCC,UADlC;AAEE,eAAI,SAFN;AAGE,cAAG,OAHL;AAIE,qBAASL,QAAQC,GAAR,CAAYC,uBAArB,GAA+CG;AAJjD,UAFF,EAQE;AACE,qCAAyBA,UAD3B;AAEE,eAAI,YAFN;AAGE,qBAASL,QAAQC,GAAR,CAAYC,uBAArB,GAA+CG;AAHjD,UARF;AAAA,OADF,EAeE,EAfF,CAdJ;AA+BG/B,WAAKgC,IA/BR;AAgCGhC,WAAKiC,QAhCR;AAiCGjC,WAAKyB,MAjCR;AAkCGtB,aAAOM,SAAP,IAAoB,8BAAC,WAAD,IAAa,WAAWd,SAAxB,GAlCvB;AAmCGK,WAAKkC,KAnCR;AAoCGrB;AApCH,KADF;AAwCD,GA/D+B;AAAA,CAAzB","file":"HeadWithMeta.js","sourcesContent":["import React from 'react'\n\nconst REGEX_FOR_STYLE_TAG = /<style>|<\\/style>/gi\n\nexport const InlineStyle = ({ clientCss }) => (\n  <style\n    key=\"clientCss\"\n    type=\"text/css\"\n    dangerouslySetInnerHTML={{\n      __html: clientCss.toString().replace(REGEX_FOR_STYLE_TAG, ''),\n    }}\n  />\n)\n\nexport const makeHeadWithMeta = ({\n  head,\n  route,\n  clientScripts,\n  config,\n  clientStyleSheets,\n  clientCss,\n}) => ({ children, ...rest }) => {\n  const renderLinkCSS = !route.redirect && !config.inlineCss\n  const useHelmetTitle = head.title && head.title[0] && head.title[0].props.children !== ''\n  let childrenArray = children\n  if (useHelmetTitle) {\n    head.title[0] = React.cloneElement(head.title[0], { key: 'title' })\n    childrenArray = React.Children.toArray(children).filter(child => {\n      if (child.type === 'title') {\n        // Filter out the title of the Document in static.config.js\n        // if there is a helmet title on this route\n        return false\n      }\n      return true\n    })\n  }\n\n  return (\n    <head {...rest}>\n      {head.base}\n      {useHelmetTitle && head.title}\n      {head.meta}\n      {!route.redirect &&\n        clientScripts.map(script => (\n          <link\n            key={`clientScript_${script}`}\n            rel=\"preload\"\n            as=\"script\"\n            href={`${process.env.REACT_STATIC_PUBLICPATH}${script}`}\n          />\n        ))}\n      {renderLinkCSS &&\n        clientStyleSheets.reduce(\n          (memo, styleSheet) => [\n            ...memo,\n            <link\n              key={`clientStyleSheetPreload_${styleSheet}`}\n              rel=\"preload\"\n              as=\"style\"\n              href={`${process.env.REACT_STATIC_PUBLICPATH}${styleSheet}`}\n            />,\n            <link\n              key={`clientStyleSheet_${styleSheet}`}\n              rel=\"stylesheet\"\n              href={`${process.env.REACT_STATIC_PUBLICPATH}${styleSheet}`}\n            />,\n          ],\n          []\n        )}\n      {head.link}\n      {head.noscript}\n      {head.script}\n      {config.inlineCss && <InlineStyle clientCss={clientCss} />}\n      {head.style}\n      {childrenArray}\n    </head>\n  )\n}\n"]}