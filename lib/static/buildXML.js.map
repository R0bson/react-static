{"version":3,"sources":["../../src/static/buildXML.js"],"names":["REGEX_TO_GET_LAST_SLASH","getPermaLink","path","prefixPath","permalink","replace","makeGenerateRouteXML","route","lastModified","priority","c","Error","join","generateXML","routes","filter","r","noindex","map","getSiteRoot","stagingSiteRoot","siteRoot","process","env","REACT_STATIC_STAGING","config","paths","disableRoutePrefixing","DIST","REACT_STATIC_PUBLICPATH","xml","fs","writeFile"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,0BAA0B,WAAhC;;AAEO,IAAMC,sCAAe,SAAfA,YAAe,OAA0B;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACpD,MAAMC,iBAAeD,UAAf,GAA4B,sBAASD,IAAT,CAAlC;AACA,SAAO,CAAGE,SAAH,QAAgBC,OAAhB,CAAwBL,uBAAxB,EAAiD,GAAjD,CAAP;AACD,CAHM;;AAKA,IAAMM,sDAAuB,SAAvBA,oBAAuB;AAAA,MAAGH,UAAH,SAAGA,UAAH;AAAA,SAAoB,iBAAS;AAAA,QACvDD,IADuD,GAChBK,KADgB,CACvDL,IADuD;AAAA,QACjDM,YADiD,GAChBD,KADgB,CACjDC,YADiD;AAAA,0BAChBD,KADgB,CACnCE,QADmC;AAAA,QACnCA,QADmC,mCACxB,GADwB;;AAE/D,WAAO,CACL,OADK,YAEGR,aAAa,EAAEC,UAAF,EAAQC,sBAAR,EAAb,EAAmCE,OAAnC,CAA2C,UAA3C,EAAuD,aAAK;AAClE,cAAQK,CAAR;AACE,aAAK,GAAL;AACE,iBAAO,MAAP;AACF,aAAK,GAAL;AACE,iBAAO,MAAP;AACF,aAAK,GAAL;AACE,iBAAO,OAAP;AACF,aAAK,GAAL;AACE,iBAAO,QAAP;AACF,aAAK,GAAL;AACE,iBAAO,QAAP;AACF;AACE,gBAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AAZJ;AAcD,KAfO,CAFH,aAkBLH,6BAA2BA,YAA3B,kBAAsD,EAlBjD,iBAmBQC,QAnBR,kBAoBL,QApBK,EAqBLG,IArBK,CAqBA,EArBA,CAAP;AAsBD,GAxBmC;AAAA,CAA7B;;AA0BA,IAAMC,oCAAc,SAAdA,WAAc;AAAA,MAAGC,MAAH,SAAGA,MAAH;AAAA,MAAWX,UAAX,SAAWA,UAAX;AAAA,gHAC4EW,OAClGC,MADkG,CAC3F;AAAA,WAAKC,EAAEd,IAAF,KAAW,KAAhB;AAAA,GAD2F,EAElGa,MAFkG,CAE3F;AAAA,WAAK,CAACC,EAAEC,OAAR;AAAA,GAF2F,EAGlGC,GAHkG,CAG9FZ,qBAAqB,EAAEH,sBAAF,EAArB,CAH8F,EAIlGS,IAJkG,CAI7F,EAJ6F,CAD5E;AAAA,CAApB;;AAOA,IAAMO,oCAAc,SAAdA,WAAc;AAAA,MAAGC,eAAH,SAAGA,eAAH;AAAA,MAAoBC,QAApB,SAAoBA,QAApB;AAAA,SACzBC,QAAQC,GAAR,CAAYC,oBAAZ,KAAqC,MAArC,GAA8CJ,eAA9C,GAAgEC,QADvC;AAAA,CAApB;;;yEAGQ;AAAA,QAASI,MAAT,SAASA,MAAT;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLX,kBADK,GACyCW,MADzC,CACLX,MADK,kBACyCW,MADzC,CACGC,KADH,EACGA,KADH,iCACW,EADX,kBACeC,qBADf,GACyCF,MADzC,CACeE,qBADf;AAGLC,gBAHK,GAGIF,KAHJ,CAGLE,IAHK;AAIPP,oBAJO,GAIIF,YAAYM,MAAZ,CAJJ;AAKPtB,sBALO,GAKMwB,wBAAwBN,QAAxB,GAAmCC,QAAQC,GAAR,CAAYM,uBALrD;;AAAA,gBAORR,QAPQ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAWPS,eAXO,GAWDjB,YAAY,EAAEC,cAAF,EAAUX,sBAAV,EAAZ,CAXC;AAAA;AAAA,mBAaP4B,kBAAGC,SAAH,CAAa9B,eAAKU,IAAL,CAAUgB,IAAV,EAAgB,aAAhB,CAAb,EAA6CE,GAA7C,CAbO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"buildXML.js","sourcesContent":["import fs from 'fs-extra'\nimport path from 'path'\n\nimport { pathJoin } from '../utils/shared'\n\nconst REGEX_TO_GET_LAST_SLASH = /\\/{1,}$/gm\n\nexport const getPermaLink = ({ path, prefixPath }) => {\n  const permalink = `${prefixPath}${pathJoin(path)}`\n  return `${permalink}/`.replace(REGEX_TO_GET_LAST_SLASH, '/')\n}\n\nexport const makeGenerateRouteXML = ({ prefixPath }) => route => {\n  const { path, lastModified, priority = 0.5 } = route\n  return [\n    '<url>',\n    `<loc>${getPermaLink({ path, prefixPath }).replace(/[<>&'\"]/g, c => {\n      switch (c) {\n        case '<':\n          return '&lt;'\n        case '>':\n          return '&gt;'\n        case '&':\n          return '&amp;'\n        case \"'\":\n          return '&apos;'\n        case '\"':\n          return '&quot;'\n        default:\n          throw new Error('XML encoding failed')\n      }\n    })}</loc>`,\n    lastModified ? `<lastmod>${lastModified}</lastmod>` : '',\n    `<priority>${priority}</priority>`,\n    '</url>',\n  ].join('')\n}\n\nexport const generateXML = ({ routes, prefixPath }) =>\n  `<?xml version=\"1.0\" encoding=\"UTF-8\"?><urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">${routes\n    .filter(r => r.path !== '404')\n    .filter(r => !r.noindex)\n    .map(makeGenerateRouteXML({ prefixPath }))\n    .join('')}</urlset>`\n\nexport const getSiteRoot = ({ stagingSiteRoot, siteRoot }) =>\n  process.env.REACT_STATIC_STAGING === 'true' ? stagingSiteRoot : siteRoot\n\nexport default async ({ config }) => {\n  const { routes, paths = {}, disableRoutePrefixing } = config\n\n  const { DIST } = paths\n  const siteRoot = getSiteRoot(config)\n  const prefixPath = disableRoutePrefixing ? siteRoot : process.env.REACT_STATIC_PUBLICPATH\n\n  if (!siteRoot) {\n    return\n  }\n\n  const xml = generateXML({ routes, prefixPath })\n\n  await fs.writeFile(path.join(DIST, 'sitemap.xml'), xml)\n}\n"]}