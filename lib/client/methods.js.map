{"version":3,"sources":["../../src/client/methods.js"],"names":["path","priority","getRouteInfo","routeInfo","allProps","localProps","Promise","all","Object","keys","sharedPropsHashes","map","key","hash","propsByHash","axios","get","process","env","REACT_STATIC_PUBLIC_PATH","prop","data","inflightPropHashes","requestPool","add","console","log","error","prefetchData","registerTemplateIDForPath","templateID","pathTemplate","getComponentForPath","preload","templateLoaded","prefetchTemplate","options","needsPrefetch","type","stop","start","prefetch","clearTemplateIDs","routeInfoByPath","erroredPaths","inflightRouteInfo","loading","loadingSubscribers","disableRouteInfoWarning","REACT_STATIC_DISABLE_ROUTE_INFO_WARNING","concurrency","Number","REACT_STATIC_PREFETCH_RATE","reloadRouteData","forEach","part","global","reloadAll","REACT_STATIC_ENV","io","require","run","port","socket","on","document","originalPath","routeInfoRoot","REACT_STATIC_DISABLE_ROUTE_PREFIXING","REACT_STATIC_SITE_ROOT","cacheBuster","REACT_STATIC_CACHE_BUST","getPath","warn","setLoading","d","s","onLoading","ccb","cb","push","filter","reactStaticGetComponentForPath","reactStaticRegisterTemplateIDForPath"],"mappings":"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","file":"methods.js","sourcesContent":["/* eslint-disable import/no-mutable-exports */\n\nimport axios from 'axios'\nimport { createPool, cleanPath, pathJoin } from '../utils/shared'\n\nexport const routeInfoByPath = {}\nexport const propsByHash = {}\nconst erroredPaths = {}\nconst inflightRouteInfo = {}\nconst inflightPropHashes = {}\nlet loading = 0\nlet loadingSubscribers = []\nconst disableRouteInfoWarning = process.env.REACT_STATIC_DISABLE_ROUTE_INFO_WARNING === 'true'\n\nconst requestPool = createPool({\n  concurrency: Number(process.env.REACT_STATIC_PREFETCH_RATE) || 3,\n})\n\nexport const reloadRouteData = () => {\n  // Delete all cached data\n  [routeInfoByPath, propsByHash, erroredPaths, inflightRouteInfo, inflightPropHashes].forEach(\n    part => {\n      Object.keys(part).forEach(key => {\n        delete part[key]\n      })\n    }\n  )\n  // Force each RouteData component to reload\n  // clearTemplateIDs()\n  global.reloadAll()\n}\n\nif (process.env.REACT_STATIC_ENV === 'development') {\n  const io = require('socket.io-client')\n  const run = async () => {\n    try {\n      const {\n        data: { port },\n      } = await axios.get('/__react-static__/getMessagePort')\n      const socket = io(`http://localhost:${port}`)\n      socket.on('connect', () => {\n        console.log(\n          'React-Static data hot-loader websocket connected. Listening for data changes...'\n        )\n      })\n      socket.on('message', ({ type }) => {\n        if (type === 'reloadRoutes') {\n          reloadRouteData()\n        }\n      })\n    } catch (err) {\n      console.log('React-Static data hot-loader websocket encountered the following error:')\n      console.error(err)\n    }\n  }\n  run()\n}\n\nexport const getRouteInfo = async (path, { priority } = {}) => {\n  if (typeof document === 'undefined') {\n    return\n  }\n  const originalPath = path\n  path = cleanPath(path)\n  // Check the cache first\n  if (routeInfoByPath[path]) {\n    return routeInfoByPath[path]\n  }\n  if (erroredPaths[path]) {\n    return\n  }\n  let routeInfo\n  try {\n    if (process.env.REACT_STATIC_ENV === 'development') {\n      // In dev, request from the webpack dev server\n      if (!inflightRouteInfo[path]) {\n        inflightRouteInfo[path] = axios.get(\n          `/__react-static__/routeInfo/${path === '/' ? '' : path}`\n        )\n      }\n      const { data } = await inflightRouteInfo[path]\n      routeInfo = data\n    } else {\n      const routeInfoRoot =\n        (process.env.REACT_STATIC_DISABLE_ROUTE_PREFIXING === 'true'\n          ? process.env.REACT_STATIC_SITE_ROOT\n          : process.env.REACT_STATIC_PUBLIC_PATH) || '/'\n      const cacheBuster = process.env.REACT_STATIC_CACHE_BUST\n        ? `?${process.env.REACT_STATIC_CACHE_BUST}`\n        : ''\n      const getPath = `${routeInfoRoot}${pathJoin(path, 'routeInfo.json')}${cacheBuster}`\n\n      if (priority) {\n        // In production, request from route's routeInfo.json\n        const { data } = await axios.get(getPath)\n        routeInfo = data\n      } else {\n        if (!inflightRouteInfo[path]) {\n          inflightRouteInfo[path] = requestPool.add(() => axios.get(getPath))\n        }\n        const { data } = await inflightRouteInfo[path]\n        routeInfo = data\n      }\n    }\n  } catch (err) {\n    erroredPaths[path] = true\n    if (process.env.REACT_STATIC_ENV === 'production' || disableRouteInfoWarning) {\n      return\n    }\n    console.warn(\n      `Could not load routeInfo for path: ${originalPath}. If this is a static route, make sure any link to this page is valid! If this is not a static route, you can desregard this warning.`\n    )\n  }\n  if (!priority) {\n    delete inflightRouteInfo[path]\n  }\n  routeInfoByPath[path] = routeInfo\n  return routeInfoByPath[path]\n}\n\nexport async function prefetchData (path, { priority } = {}) {\n  // Get route info so we can check if path has any data\n  const routeInfo = await getRouteInfo(path, { priority })\n\n  // Not a static route? Bail out.\n  if (!routeInfo) {\n    return\n  }\n\n  // Defer to the cache first. In dev mode, this should already be available from\n  // the call to getRouteInfo\n  if (routeInfo.allProps) {\n    return routeInfo.allProps\n  }\n\n  // Request and build the props one by one\n  const allProps = {\n    ...(routeInfo.localProps || {}),\n  }\n\n  // Request the template and loop over the routeInfo.sharedPropsHashes, requesting each prop\n  await Promise.all(\n    Object.keys(routeInfo.sharedPropsHashes).map(async key => {\n      const hash = routeInfo.sharedPropsHashes[key]\n\n      // Check the propsByHash first\n      if (!propsByHash[hash]) {\n        // Reuse request for duplicate inflight requests\n        try {\n          // If priority, get it immediately\n          if (priority) {\n            const { data: prop } = await axios.get(\n              `${process.env.REACT_STATIC_PUBLIC_PATH}staticData/${hash}.json`\n            )\n            propsByHash[hash] = prop\n          } else {\n            // Non priority, share inflight requests and use pool\n            if (!inflightPropHashes[hash]) {\n              inflightPropHashes[hash] = requestPool.add(() =>\n                axios.get(`${process.env.REACT_STATIC_PUBLIC_PATH}staticData/${hash}.json`)\n              )\n            }\n            const { data: prop } = await inflightPropHashes[hash]\n            // Place it in the cache\n            propsByHash[hash] = prop\n          }\n        } catch (err) {\n          console.log('Error: There was an error retrieving a prop for this route! hashID:', hash)\n          console.error(err)\n        }\n        if (!priority) {\n          delete inflightPropHashes[hash]\n        }\n      }\n\n      // Otherwise, just set it as the key\n      allProps[key] = propsByHash[hash]\n    })\n  )\n\n  // Cache the entire props for the route\n  routeInfo.allProps = allProps\n\n  // Return the props\n  return routeInfo.allProps\n}\n\nexport async function prefetchTemplate (path, { priority } = {}) {\n  // Clean the path\n  path = cleanPath(path)\n  // Get route info so we can check if path has any data\n  const routeInfo = await getRouteInfo(path)\n\n  if (routeInfo) {\n    registerTemplateIDForPath(path, routeInfo.templateID)\n  }\n\n  // Preload the template if available\n  const pathTemplate = getComponentForPath(path)\n  if (pathTemplate && pathTemplate.preload) {\n    if (priority) {\n      await pathTemplate.preload()\n    } else {\n      await requestPool.add(() => pathTemplate.preload())\n    }\n    routeInfo.templateLoaded = true\n    return pathTemplate\n  }\n}\n\nexport async function needsPrefetch (path, options = {}) {\n  // Clean the path\n  path = cleanPath(path)\n\n  if (!path) {\n    return false\n  }\n\n  // Get route info so we can check if path has any data\n  const routeInfo = await getRouteInfo(path, options)\n\n  // Not a static route? Bail out.\n  if (!routeInfo) {\n    return true\n  }\n\n  // Defer to the cache first\n  if (!routeInfo.allProps || !routeInfo.templateLoaded) {\n    return true\n  }\n}\n\nexport async function prefetch (path, options = {}) {\n  // Clean the path\n  path = cleanPath(path)\n\n  const { type } = options\n\n  if (options.priority) {\n    requestPool.stop()\n  }\n\n  let data\n  if (type === 'data') {\n    data = await prefetchData(path, options)\n  } else if (type === 'template') {\n    await prefetchTemplate(path, options)\n  } else {\n    [data] = await Promise.all([prefetchData(path, options), prefetchTemplate(path, options)])\n  }\n\n  if (options.priority) {\n    requestPool.start()\n  }\n\n  return data\n}\n\nexport const setLoading = d => {\n  if (loading !== d) {\n    loading = d\n    loadingSubscribers.forEach(s => s())\n  }\n}\n\nexport const onLoading = cb => {\n  const ccb = () => cb(loading)\n  loadingSubscribers.push(ccb)\n  return () => {\n    loadingSubscribers = loadingSubscribers.filter(d => d !== ccb)\n  }\n}\n\nexport function getComponentForPath (path) {\n  path = cleanPath(path)\n  return global.reactStaticGetComponentForPath && global.reactStaticGetComponentForPath(path)\n}\n\nexport function registerTemplateIDForPath (path, templateID) {\n  path = cleanPath(path)\n  return (\n    global.reactStaticGetComponentForPath &&\n    global.reactStaticRegisterTemplateIDForPath(path, templateID)\n  )\n}\n\nexport function clearTemplateIDs () {\n  return global.clearTemplateIDs && global.clearTemplateIDs()\n}\n"]}