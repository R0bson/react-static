{"version":3,"sources":["../../../src/client/components/Prefetch.js"],"names":["Prefetch","props","path","onLoad","type","cleanedPath","data","children","React","Component","defaultProps"],"mappings":";;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;;;;;;;;;;;IAEqBA,Q;;;;;;;;;;;;;;;;;;;yBAQc,KAAKC,K,EAA5BC,I,UAAAA,I,EAAMC,M,UAAAA,M,EAAQC,I,UAAAA,I;AAChBC,2B,GAAc,uBAAUH,IAAV,C;;uBACD,uBAASG,WAAT,EAAsB,EAAED,UAAF,EAAtB,C;;;AAAbE,oB;;AACNH,uBAAOG,IAAP,EAAaD,WAAb;;;;;;;;;;;;;;;;;;6BAEQ;AACR,aAAO,yBAAY,KAAKJ,KAAL,CAAWM,QAAvB,CAAP;AACD;;;;EAfmCC,gBAAMC,S;;AAAvBT,Q,CACZU,Y,GAAe;AACpBH,YAAU,IADU;AAEpBL,QAAM,IAFc;AAGpBE,QAAM,IAHc;AAIpBD,UAAQ,kBAAM,CAAE;AAJI,C;kBADHH,Q","file":"Prefetch.js","sourcesContent":["import React from 'react'\n\nimport { cleanPath, unwrapArray } from '../../utils/shared'\nimport { prefetch } from '../methods'\n\nexport default class Prefetch extends React.Component {\n  static defaultProps = {\n    children: null,\n    path: null,\n    type: null,\n    onLoad: () => {},\n  }\n  async componentDidMount () {\n    const { path, onLoad, type } = this.props\n    const cleanedPath = cleanPath(path)\n    const data = await prefetch(cleanedPath, { type })\n    onLoad(data, cleanedPath)\n  }\n  render () {\n    return unwrapArray(this.props.children)\n  }\n}\n"]}