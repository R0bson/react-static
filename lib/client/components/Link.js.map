{"version":3,"sources":["../../../src/client/components/Link.js"],"names":["isRoutingUrl","to","match","reactRouterProps","SmartLink","prefetch","scrollToTop","onClick","rest","resolvedTo","pathname","path","console","warn","finalRest","document","window","__noScrollTo","e","handleRef","children","aRest","href","filter","prop","forEach","Link","NavLink"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AAEA;;AACA;;;;;;;AAFA;;;AAIA;;AAEA;AACA,SAASA,YAAT,CAAuBC,EAAvB,EAA2B;AACzB,MAAI,OAAOA,EAAP,KAAc,WAAlB,EAA+B,OAAO,KAAP;AAC/B,SACE,CAACA,GAAGC,KAAH,CAAS,aAAT,CAAD,IAA4B;AAC5B,GAACD,GAAGC,KAAH,CAAS,IAAT,CADD,IACmB;AACnB,GAACD,GAAGC,KAAH,CAAS,mBAAT,CAHH,CAGiC;AAHjC;AAKD;;AAED,IAAMC,mBAAmB,CACvB,iBADuB,EAEvB,aAFuB,EAGvB,OAHuB,EAIvB,UAJuB,EAKvB,UALuB,EAMvB,QANuB,EAOvB,IAPuB,EAQvB,SARuB,CAAzB;;AAWA,SAASC,SAAT,OAEG;AAAA,2BADDC,QACC;AAAA,MADDA,QACC,iCADU,IACV;AAAA,8BADgBC,WAChB;AAAA,MADgBA,WAChB,oCAD8B,IAC9B;AAAA,MADoCC,QACpC,QADoCA,OACpC;AAAA,MADgDC,IAChD;;AAAA,MACOP,EADP,GACcO,IADd,CACOP,EADP;;AAED,MAAIQ,aAAaR,EAAjB;AACA,MAAI,sBAASA,EAAT,CAAJ,EAAkB;AAChB,QAAI,CAACA,GAAGS,QAAJ,IAAgBT,GAAGU,IAAvB,EAA6B;AAC3BC,cAAQC,IAAR,CAAa,8IAAb;AACAZ,SAAGS,QAAH,GAAcT,GAAGU,IAAjB;AACA,aAAOV,GAAGU,IAAV;AACAF,mBAAaR,GAAGS,QAAhB;AACD,KALD,MAKO,IAAIT,GAAGS,QAAP,EAAiB;AACtBD,mBAAaR,GAAGS,QAAhB;AACD;AACF;AACD;AACA,MAAIV,aAAaS,UAAb,CAAJ,EAA8B;AAC5B,QAAMK,yBACDN,IADC;AAEJD,eAAS,oBAAK;AACZ,YAAI,OAAOQ,QAAP,KAAoB,WAApB,IAAmC,CAACT,WAAxC,EAAqD;AACnDU,iBAAOC,YAAP,GAAsB,IAAtB;AACD;AACD,YAAIV,QAAJ,EAAa;AACXA,mBAAQW,CAAR;AACD;AACF;AATG,MAAN;;AAYA,QAAIb,QAAJ,EAAc;AACZ,aACE,8BAAC,0BAAD;AACE,cAAMI,UADR;AAEE,cAAMJ,QAFR;AAGE,gBAAQ;AAAA,cAAGc,SAAH,SAAGA,SAAH;AAAA,iBAAmB,8BAAC,uBAAD,eAAwBL,SAAxB,IAAmC,UAAUK,SAA7C,IAAnB;AAAA;AAHV,QADF;AAOD;AACD,WAAO,8BAAC,uBAAD,EAAwBL,SAAxB,CAAP;AACD;;AAED;;AAvCC,MAwCOM,QAxCP,GAwC8BZ,IAxC9B,CAwCOY,QAxCP;AAAA,MAwCoBC,KAxCpB,4BAwC8Bb,IAxC9B;;AAyCDa,QAAMC,IAAN,GAAaD,MAAMpB,EAAnB;AACA,SAAOoB,MAAMpB,EAAb;;AAEAE,mBAAiBoB,MAAjB,CAAwB;AAAA,WAAQF,MAAMG,IAAN,CAAR;AAAA,GAAxB,EAA6CC,OAA7C,CAAqD,gBAAQ;AAC3Db,YAAQC,IAAR,eAAyBW,IAAzB,uCAA+DH,MAAMC,IAArE;AACD,GAFD;AAGAnB,mBAAiBsB,OAAjB,CAAyB;AAAA,WAAQ,OAAOJ,MAAMG,IAAN,CAAf;AAAA,GAAzB;;AAEA,SAAO;AAAA;AAAOH,SAAP;AAAeD;AAAf,GAAP;AACD;;AAEM,IAAMM,sBAAOtB,SAAb;AACA,IAAMuB,4BAAUvB,SAAhB","file":"Link.js","sourcesContent":["import React from 'react'\nimport { NavLink as ReactRouterNavLink } from 'react-router-dom'\n//\nimport { isObject } from '../../utils/shared'\nimport PrefetchWhenSeen from './PrefetchWhenSeen'\n\n//\n\n// Detects internal link url schemas\nfunction isRoutingUrl (to) {\n  if (typeof to === 'undefined') return false\n  return (\n    !to.match(/^([A-z]?)+:/) && // starts with external protocol\n    !to.match(/^#/) && // starts with hash fragment\n    !to.match(/^[a-z]{1,10}:\\/\\//) // starts with double slash protocol\n  )\n}\n\nconst reactRouterProps = [\n  'activeClassName',\n  'activeStyle',\n  'exact',\n  'isActive',\n  'location',\n  'strict',\n  'to',\n  'replace',\n]\n\nfunction SmartLink ({\n  prefetch = true, scrollToTop = true, onClick, ...rest\n}) {\n  const { to } = rest\n  let resolvedTo = to\n  if (isObject(to)) {\n    if (!to.pathname && to.path) {\n      console.warn('You are using the `path` key in a <Link to={...} /> when you should be using the `pathname` key. This will be deprecated in future versions!')\n      to.pathname = to.path\n      delete to.path\n      resolvedTo = to.pathname\n    } else if (to.pathname) {\n      resolvedTo = to.pathname\n    }\n  }\n  // Router Link\n  if (isRoutingUrl(resolvedTo)) {\n    const finalRest = {\n      ...rest,\n      onClick: e => {\n        if (typeof document !== 'undefined' && !scrollToTop) {\n          window.__noScrollTo = true\n        }\n        if (onClick) {\n          onClick(e)\n        }\n      },\n    }\n\n    if (prefetch) {\n      return (\n        <PrefetchWhenSeen\n          path={resolvedTo}\n          type={prefetch}\n          render={({ handleRef }) => <ReactRouterNavLink {...finalRest} innerRef={handleRef} />}\n        />\n      )\n    }\n    return <ReactRouterNavLink {...finalRest} />\n  }\n\n  // Browser Link\n  const { children, ...aRest } = rest\n  aRest.href = aRest.to\n  delete aRest.to\n\n  reactRouterProps.filter(prop => aRest[prop]).forEach(prop => {\n    console.warn(`Warning: ${prop} makes no sense on a <Link to=\"${aRest.href}\">.`)\n  })\n  reactRouterProps.forEach(prop => delete aRest[prop])\n\n  return <a {...aRest}>{children}</a>\n}\n\nexport const Link = SmartLink\nexport const NavLink = SmartLink\n"]}