{"version":3,"sources":["../../../src/client/components/RouterScroller.js"],"names":["RouterScroller","scrollToTop","props","autoScrollToTop","scrollToTopDuration","duration","scrollToHash","orScrollToTop","scrollToHashDuration","autoScrollToHash","scrollToHashOffset","hash","location","resolvedHash","substring","element","document","getElementById","offset","prev","pathname","window","__noScrollTo","children","React","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AAEA;;AACA;;;;;;;;;;;AAFA;;;AAIA,IAAMA,iBAAiB;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA,sMAkBnBC,WAlBmB,GAkBL,YAAM;AAAA,wBAC+B,MAAKC,KADpC;AAAA,UACVC,eADU,eACVA,eADU;AAAA,UACOC,mBADP,eACOA,mBADP;;AAElB,UAAID,eAAJ,EAAqB;AACnB,gCAAS,CAAT,EAAY;AACVE,oBAAUD;AADA,SAAZ;AAGD;AACF,KAzBkB,QA0BnBE,YA1BmB,GA0BJ,YAAmC;AAAA,sFAAP,EAAO;AAAA,sCAAhCC,aAAgC;AAAA,UAAhCA,aAAgC,uCAAhB,IAAgB;;AAAA,yBAM5C,MAAKL,KANuC;AAAA,UAE9CM,oBAF8C,gBAE9CA,oBAF8C;AAAA,UAG9CC,gBAH8C,gBAG9CA,gBAH8C;AAAA,UAI9CC,kBAJ8C,gBAI9CA,kBAJ8C;AAAA,UAKlCC,IALkC,gBAK9CC,QAL8C,CAKlCD,IALkC;;AAOhD,UAAI,CAACF,gBAAL,EAAuB;AACrB;AACD;AACD,UAAIE,IAAJ,EAAU;AACR,YAAME,eAAeF,KAAKG,SAAL,CAAe,CAAf,CAArB;AACA,YAAID,YAAJ,EAAkB;AAChB;AACA,cAAME,UAAUC,SAASC,cAAT,CAAwBJ,YAAxB,CAAhB;AACA,cAAIE,YAAY,IAAhB,EAAsB;AACpB,oCAASA,OAAT,EAAkB;AAChBV,wBAAUG,oBADM;AAEhBU,sBAAQR;AAFQ,aAAlB;AAID,WALD,MAKO;AACL,+BAAI,YAAM;AACR,kBAAMK,UAAUC,SAASC,cAAT,CAAwBJ,YAAxB,CAAhB;AACA,kBAAIE,YAAY,IAAhB,EAAsB;AACpB,wCAASA,OAAT,EAAkB;AAChBV,4BAAUG,oBADM;AAEhBU,0BAAQR;AAFQ,iBAAlB;AAID;AACF,aARD;AASD;AACF;AACF,OAtBD,MAsBO,IAAIH,aAAJ,EAAmB;AACxB,gCAAS,CAAT,EAAY;AACVF,oBAAUG;AADA,SAAZ;AAGD;AACF,KA/DkB;AAAA;;AAAA;AAAA;AAAA,wCACA;AACnB;AACA,WAAKF,YAAL,CAAkB,EAAEC,eAAe,KAAjB,EAAlB;AACD;AAJoB;AAAA;AAAA,uCAKDY,IALC,EAKK;AACxB,UAAIA,KAAKP,QAAL,CAAcQ,QAAd,KAA2B,KAAKlB,KAAL,CAAWU,QAAX,CAAoBQ,QAA/C,IAA2D,CAAC,KAAKlB,KAAL,CAAWU,QAAX,CAAoBD,IAApF,EAA0F;AACxF,YAAIU,OAAOC,YAAX,EAAyB;AACvBD,iBAAOC,YAAP,GAAsB,KAAtB;AACA;AACD;AACD,aAAKrB,WAAL;AACA;AACD;AACD,UAAIkB,KAAKP,QAAL,CAAcD,IAAd,KAAuB,KAAKT,KAAL,CAAWU,QAAX,CAAoBD,IAA/C,EAAqD;AACnD,aAAKL,YAAL;AACD;AACF;AAjBoB;AAAA;AAAA,6BAgET;AACR,aAAO,yBAAY,KAAKJ,KAAL,CAAWqB,QAAvB,CAAP;AACD;AAlEkB;;AAAA;AAAA,EAAwCC,gBAAMC,SAA9C,EAAvB;;kBAqEezB,c","file":"RouterScroller.js","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport RAF from 'raf'\n//\nimport { unwrapArray } from '../../utils/shared'\nimport scrollTo from '../../utils/scrollTo'\n\nconst RouterScroller = withRouter(class RouterScroller extends React.Component {\n  componentDidMount () {\n    // Do not scroll to top on initial page load if hash does not exist\n    this.scrollToHash({ orScrollToTop: false })\n  }\n  componentDidUpdate (prev) {\n    if (prev.location.pathname !== this.props.location.pathname && !this.props.location.hash) {\n      if (window.__noScrollTo) {\n        window.__noScrollTo = false\n        return\n      }\n      this.scrollToTop()\n      return\n    }\n    if (prev.location.hash !== this.props.location.hash) {\n      this.scrollToHash()\n    }\n  }\n    scrollToTop = () => {\n      const { autoScrollToTop, scrollToTopDuration } = this.props\n      if (autoScrollToTop) {\n        scrollTo(0, {\n          duration: scrollToTopDuration,\n        })\n      }\n    }\n    scrollToHash = ({ orScrollToTop = true } = {}) => {\n      const {\n        scrollToHashDuration,\n        autoScrollToHash,\n        scrollToHashOffset,\n        location: { hash },\n      } = this.props\n      if (!autoScrollToHash) {\n        return\n      }\n      if (hash) {\n        const resolvedHash = hash.substring(1)\n        if (resolvedHash) {\n          // We must attempt to scroll synchronously or we risk the browser scrolling for us\n          const element = document.getElementById(resolvedHash)\n          if (element !== null) {\n            scrollTo(element, {\n              duration: scrollToHashDuration,\n              offset: scrollToHashOffset,\n            })\n          } else {\n            RAF(() => {\n              const element = document.getElementById(resolvedHash)\n              if (element !== null) {\n                scrollTo(element, {\n                  duration: scrollToHashDuration,\n                  offset: scrollToHashOffset,\n                })\n              }\n            })\n          }\n        }\n      } else if (orScrollToTop) {\n        scrollTo(0, {\n          duration: scrollToHashDuration,\n        })\n      }\n    }\n    render () {\n      return unwrapArray(this.props.children)\n    }\n})\n\nexport default RouterScroller\n"]}