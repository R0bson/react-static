{"version":3,"sources":["../../../src/client/components/Redirect.js"],"names":["Redirect","props","to","delay","fromPath","rest","document","resolvedTo","pathname","includes","process","env","REACT_STATIC_PUBLIC_PATH","React","Component"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;;;;;AACA;;IAEqBA,Q;;;;;;;;;;;6BACT;AAAA,mBAGJ,KAAKC,KAHD;AAAA,UAENC,EAFM,UAENA,EAFM;AAAA,gCAEFC,KAFE;AAAA,UAEFA,KAFE,gCAEM,CAFN;AAAA,UAESC,QAFT,UAESA,QAFT;AAAA,UAEsBC,IAFtB;;AAIR,UAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACnC,YAAIC,aAAa,QAAOL,EAAP,yCAAOA,EAAP,OAAc,QAAd,GAAyBA,GAAGM,QAA5B,GAAuCN,EAAxD;AACA,YAAI,CAACK,WAAWE,QAAX,CAAoB,IAApB,CAAL,EAAgC;AAC9BF,4BAAgBG,QAAQC,GAAR,CAAYC,wBAA5B,IACEL,eAAe,GAAf,GAAqB,EAArB,GAA0BA,UAD5B;AAGD;AACD;AACE;AACA;AAAC,iCAAD;AAAA;AACGH,wBACC;AAAA;AAAA;AAAA,mBAAWM,QAAQC,GAAR,CAAYC,wBAAvB,IACER,aAAa,GAAb,GAAmB,EAAnB,GAAwBA,QAD1B;AAAA,aAFJ;AAOE,oDAAM,KAAI,WAAV,EAAsB,MAAMG,UAA5B,GAPF;AAQE,oDAAM,MAAK,QAAX,EAAoB,SAAQ,SAA5B,GARF;AASE,oDAAM,WAAU,cAAhB,EAA+B,SAAQ,0BAAvC,GATF;AAUE,oDAAM,WAAU,SAAhB,EAA0B,SAAYJ,KAAZ,cAA0BI,UAApD;AAVF;AAFF;AAeD;AACD,aAAO,8BAAC,wBAAD,aAAqB,IAAIL,EAAzB,IAAiCG,IAAjC,EAAP;AACD;;;;EA7BmCQ,gBAAMC,S;;kBAAvBd,Q","file":"Redirect.js","sourcesContent":["import React from 'react'\nimport { Redirect as ReactRouterRedirect } from 'react-router-dom'\nimport Head from 'react-helmet'\n//\n\nexport default class Redirect extends React.Component {\n  render () {\n    const {\n      to, delay = 0, fromPath, ...rest\n    } = this.props\n    if (typeof document === 'undefined') {\n      let resolvedTo = typeof to === 'object' ? to.pathname : to\n      if (!resolvedTo.includes('//')) {\n        resolvedTo = `${process.env.REACT_STATIC_PUBLIC_PATH}${\n          resolvedTo === '/' ? '' : resolvedTo\n        }`\n      }\n      return (\n        // ReactRouterRedirect\n        <Head>\n          {fromPath && (\n            <title>{`${process.env.REACT_STATIC_PUBLIC_PATH}${\n              fromPath === '/' ? '' : fromPath\n            }`}\n            </title>\n          )}\n          <link rel=\"canonical\" href={resolvedTo} />\n          <meta name=\"robots\" content=\"noindex\" />\n          <meta httpEquiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n          <meta httpEquiv=\"refresh\" content={`${delay}; url=${resolvedTo}`} />\n        </Head>\n      )\n    }\n    return <ReactRouterRedirect to={to} {...rest} />\n  }\n}\n"]}