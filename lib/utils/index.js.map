{"version":3,"sources":["../../src/utils/index.js"],"names":["config","Component","siteData","DocumentHtml","Html","Head","Body","html","fs","outputFile","paths","HTML_TEMPLATE","createIndexFilePlaceholder","copyPublicFolder","isArray","isObject","glob","time","timeEnd","debounce","ChalkColor","yarn","npm","findAvailablePort","start","avoid","Promise","resolve","reject","OpenPort","find","startingPort","endingPort","err","port","ensureDirSync","PUBLIC","copySync","DIST","dereference","filter","file","INDEX","a","Array","path","options","files","times","message","performance","now","console","log","Math","round","func","wait","immediate","timeout","args","later","callNow","clearTimeout","setTimeout"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable import/no-dynamic-require, react/no-danger */\nimport React from 'react'\nimport { renderToString } from 'react-dom/server'\nimport OpenPort from 'openport'\nimport fs from 'fs-extra'\nimport nodeGlob from 'glob'\nimport { performance } from 'perf_hooks'\n//\nimport { Html, Head, Body } from '../static/RootComponents'\n\n//\n\nexport const ChalkColor = {\n  yarn: '#2c8ebb',\n  npm: '#cb3837',\n}\n\nexport const findAvailablePort = (start, avoid = []) =>\n  new Promise((resolve, reject) =>\n    OpenPort.find(\n      {\n        startingPort: start,\n        endingPort: start + 1000,\n        avoid,\n      },\n      (err, port) => {\n        if (err) {\n          return reject(err)\n        }\n        resolve(port)\n      }\n    )\n  )\n\nexport function copyPublicFolder (config) {\n  fs.ensureDirSync(config.paths.PUBLIC)\n\n  fs.copySync(config.paths.PUBLIC, config.paths.DIST, {\n    dereference: true,\n    filter: file => file !== config.paths.INDEX,\n  })\n}\n\nexport async function createIndexFilePlaceholder ({ config, Component, siteData }) {\n  // Render the base document component to string with siteprops\n  const DocumentHtml = renderToString(\n    <Component renderMeta={{}} Html={Html} Head={Head} Body={Body} siteData={siteData}>\n      <div id=\"root\" />\n    </Component>\n  )\n  const html = `<!DOCTYPE html>${DocumentHtml}`\n\n  // Write the Document to index.html\n  await fs.outputFile(config.paths.HTML_TEMPLATE, html)\n}\n\nexport function isArray (a) {\n  return Array.isArray(a)\n}\n\nexport function isObject (a) {\n  return !Array.isArray(a) && typeof a === 'object' && a !== null\n}\n\nexport function glob (path, options = {}) {\n  return new Promise((resolve, reject) =>\n    nodeGlob(path, options, (err, files) => {\n      if (err) {\n        return reject(err)\n      }\n      resolve(files)\n    })\n  )\n}\n\nconst times = {}\nexport function time (message) {\n  times[message] = performance.now()\n}\nexport function timeEnd (message) {\n  if (times[message]) {\n    console.log(`${message} (${Math.round((performance.now() - times[message]) * 10) / 10}ms)`)\n    times[message] = null\n  }\n}\n\nexport function debounce (func, wait, immediate) {\n  let timeout\n  return (...args) => {\n    const later = () => {\n      timeout = null\n      if (!immediate) func(...args)\n    }\n    const callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) func(...args)\n  }\n}\n"]}