{"version":3,"sources":["../../src/commands/start.js"],"names":["cleaned","indexCreated","config","debug","process","env","NODE_ENV","REACT_STATIC_ENV","BABEL_ENV","console","log","fs","remove","paths","DIST","getSiteData","dev","siteData","Component","Document","DefaultDocument","opts","Promise","start"],"mappings":";;;;;;;;;;AAAA;;;;AAEA;;AACA;;AACA;;AACA;;;;AACA;;;;;AALA;;;AAMA;;AAEA,IAAIA,gBAAJ;AACA,IAAIC,qBAAJ;;;wEAEe;AAAA;;AAAA,oFAA0C,EAA1C;AAAA,QAAwBC,MAAxB,SAAwBA,MAAxB;AAAA,QAAgCC,KAAhC,SAAgCA,KAAhC;;AAAA;AAAA;AAAA;AAAA;AACb;AACA,gBAAI,OAAOC,QAAQC,GAAR,CAAYC,QAAnB,KAAgC,WAApC,EAAiD;AAC/CF,sBAAQC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACD;AACDF,oBAAQC,GAAR,CAAYE,gBAAZ,GAA+B,aAA/B;AACAH,oBAAQC,GAAR,CAAYG,SAAZ,GAAwB,aAAxB;;AAEA;AARa;AAAA,mBASP,yBAAUN,MAAV;AAAA,qFAAkB,kBAAMA,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB,4BAAIC,KAAJ,EAAW;AACTM,kCAAQC,GAAR,CAAY,oCAAZ;AACAD,kCAAQC,GAAR,CAAYR,MAAZ;AACD;;AAJqB,4BAMjBF,OANiB;AAAA;AAAA;AAAA;;AAOpBA,kCAAU,IAAV;AACA;AARoB;AAAA,+BASdW,kBAAGC,MAAH,CAAUV,OAAOW,KAAP,CAAaC,IAAvB,CATc;;AAAA;AAAA;AAAA,+BAaCZ,OAAOa,WAAP,CAAmB,EAAEC,KAAK,IAAP,EAAnB,CAbD;;AAAA;AAahBC,gCAbgB;;;AAetB;AACMC,iCAhBgB,GAgBJhB,OAAOiB,QAAP,IAAmBC,+BAhBf;;AAAA,4BAkBjBnB,YAlBiB;AAAA;AAAA;AAAA;;AAmBpBA,uCAAe,IAAf;AACA;AApBoB;AAAA,+BAqBd,uCAA2B;AAC/BC,wCAD+B;AAE/BgB,8CAF+B;AAG/BD;AAH+B,yBAA3B,CArBc;;AAAA;AAAA;AAAA,+BA4BhB,2BAAc,EAAEf,cAAF,EAAUmB,MAAM,EAAEL,KAAK,IAAP,EAAhB,EAAd;AAAA,iGAA+C,iBAAMd,MAAN;AAAA;AAAA;AAAA;AAAA;AACnD;;AAEA;AAHmD;AAAA,2CAI7C,6BAAe,EAAEA,cAAF,EAAf,CAJ6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA/C;;AAAA;AAAA;AAAA;AAAA,4BA5BgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlB;;AAAA;AAAA;AAAA;AAAA,gBATO;;AAAA;AAAA;AAAA,mBA6CP,IAAIoB,OAAJ,CAAY,YAAM;AACtB;AACD,aAFK,CA7CO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeC,K;;;;SAAAA,K","file":"start.js","sourcesContent":["import fs from 'fs-extra'\n//\nimport { prepareRoutes } from '../static'\nimport { DefaultDocument } from '../static/RootComponents'\nimport { startDevServer, reloadRoutes } from '../static/webpack'\nimport getConfig from '../static/getConfig'\nimport { createIndexFilePlaceholder } from '../utils'\n//\n\nlet cleaned\nlet indexCreated\n\nexport default async function start ({ config, debug } = {}) {\n  // ensure ENV variables are set\n  if (typeof process.env.NODE_ENV === 'undefined') {\n    process.env.NODE_ENV = 'development'\n  }\n  process.env.REACT_STATIC_ENV = 'development'\n  process.env.BABEL_ENV = 'development'\n\n  // Use callback style to subscribe to changes\n  await getConfig(config, async config => {\n    if (debug) {\n      console.log('DEBUG - Resolved static.config.js:')\n      console.log(config)\n    }\n\n    if (!cleaned) {\n      cleaned = true\n      // Clean the dist folder\n      await fs.remove(config.paths.DIST)\n    }\n\n    // Get the site props\n    const siteData = await config.getSiteData({ dev: true })\n\n    // Resolve the base HTML template\n    const Component = config.Document || DefaultDocument\n\n    if (!indexCreated) {\n      indexCreated = true\n      // Render an index.html placeholder\n      await createIndexFilePlaceholder({\n        config,\n        Component,\n        siteData,\n      })\n    }\n\n    await prepareRoutes({ config, opts: { dev: true } }, async config => {\n      reloadRoutes()\n\n      // Build the JS bundle\n      await startDevServer({ config })\n    })\n  })\n\n  await new Promise(() => {\n    // Do nothing, the user must exit this command\n  })\n}\n"]}